<?xml version="1.0" encoding="UTF-8"?>

<!-- Please see Cogchar open source license at bottom of this file -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.cogchar</groupId>
		<artifactId>org.cogchar.modules.main</artifactId>
		<version>1.1.4-SNAPSHOT</version>
		<relativePath>../org.cogchar.modules.main/pom.xml</relativePath>
	</parent>		

	<artifactId>org.cogchar.lib.core.api</artifactId>
	<name>${project.artifactId} - POJO + Scala</name>
	<description>Cogchar core - does not include Render binding or Robot binding</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.cogchar.lib.onto</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- 2015-01-17 Temporarily adding "scala-actors" lib here, although it is really more an Impl than API thing -->
        <!--
        Old (pre-akka) scala.actors pkg is currently used by our prototype AuditSvc, which is used in CircusTest
        -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-actors</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>scala-library</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
			</exclusions>
		</dependency>
        <!--  2016-03-28 removed this dangling reference to nonexistent prj, don't know how it was resolving
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.cogchar.lib.actor</artifactId>
			<version>${project.version}</version>
		</dependency>
		-->
    	<dependency>
			<groupId>org.appdapter</groupId>
			<artifactId>org.appdapter.bundle.core</artifactId>
		</dependency>
    	<dependency>
			<groupId>org.appdapter</groupId>
			<artifactId>org.appdapter.bundle.xload</artifactId>
			<version>${appdapter.version}</version>
		</dependency>		
		<dependency>
			<!-- Apache commons-math used in both o.c.l.animoid and o.c.l.sonograph, which we obtain indirectly via: -->	
			<groupId>org.appdapter</groupId>
			<artifactId>ext.bundle.math.symja_jas</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.xpp3</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>kxml2-min</artifactId>
					<groupId>net.sf.kxml</groupId>
				</exclusion>
			</exclusions>
		</dependency>	
    <!-- Surefire interprets this clue and then actually uses JUnit 4.6.   This clue is unnecessary if the
		surefire plugin is given   surefire-junit47    as a dependency.
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
-->
        <!-- These deps appear to cause a Scala lib other than 2.10.2 to come in,
        leading under IDEA to same error mentioned in "testCompile" section below:
error: bad symbolic reference. A signature in ShouldMatchers.class refers to type Collection
in package scala.package which is not available.

            ...because IDEA wants to compile test sources

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest</artifactId>
			<scope>test</scope>
		</dependency>		
		<dependency>
			<groupId>org.scala-tools.testing</groupId>
			<artifactId>specs_2.10</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>scala-library</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		-->
	</dependencies>
	<build>
		<!--	  
	These two sourceDir params are unnecessary, since our project conforms to maven-scala-plugin conventions.
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
-->
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<!-- We're not actually using any scala tests right now
							<goal>testCompile</goal>
Stu:  When I try to activate "testCompile" I get:
error: bad symbolic reference. A signature in ShouldMatchers.class refers to type Collection
in package scala.package which is not available.
It may be completely missing from the current classpath, or the version on
the classpath might be incompatible with the version used when compiling ShouldMatchers.class.							
							-->
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
<!-- TODO - check version -->
				<version>2.17</version>
				<configuration>
					<!--  This trick did not seem to work.
					<junitArtifactName>org.apache.servicemix.bundles:org.apache.servicemix.bundles.junit</junitArtifactName>
					-->
					<skipTests>true</skipTests>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.17</version>
					</dependency>
				</dependencies>				
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.scala-tools
										</groupId>
										<artifactId>
											maven-scala-plugin
										</artifactId>
										<versionRange>
											[2.15.2,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>

<!--
/*
*  Copyright 2011 by The Cogchar Project (www.cogchar.org).
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*/
-->
