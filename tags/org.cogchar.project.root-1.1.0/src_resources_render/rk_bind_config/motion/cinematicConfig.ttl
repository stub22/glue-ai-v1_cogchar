## This file contains RDF in Turtle (".ttl") format.
## See:   http://www.w3.org/TeamSubmission/turtle/


@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix dc:     <http://purl.org/dc/elements/1.1/> .

@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .

@prefix ja: 	<http://jena.hpl.hp.com/2005/11/Assembler#> .

@prefix apsb:	<http://www.appdapter.org/schema/box#> .
@prefix apt:	<http://www.appdapter.org/test#> .

@prefix bc:		<http://www.cogchar.org/bony/config#> .
@prefix bci:	<http://www.cogchar.org/bony/config/instance#> .

@prefix cc:		<http://www.cogchar.org/schema/cinematic#> .
@prefix cci:	<http://www.cogchar.org/schema/cinematic/instance#> .


<>  rdfs:comment     "All of this metadata is optional, unused, and just for fun/future" ;
    dc:creator       "Ryan Biggs" ;
    dc:subject       "Cinematic config" ;
    dc:publisher     "cogchar.org" ;
    dc:title         "(title) Cinematic config" ;
    dc:description   "(desc) Configuration for cinematic motions of cameras and objects" ;
    dc:date          "2012-06-13" ;

    dc:format        "RDF" ;
    dc:identifier    "what_does_this_dublin_core_identifier_mean"
    .
    

#### This "Buildable" resource defines a factory for a particular kind of component.

cc:BuildableCinematicConfig
		a 					rdfs:Class;
		rdfs:subClassOf 	ja:Object;
		ja:assembler		"org.cogchar.api.cinema.CinematicConfig$Builder" 
#####  Again, note the period ending the description of this resource, and all other
#####  top-level (*syntactically, but not semantically*) resources below.
		.


##########################################################################
#####   The Main Resource
#####  The URI of the Cinematic Config is (the expanded form of) bci:cinematicConfig1	
##### rdf:type allows Jena Assembler to construct the factory   (CinematicConfig.Builder)
##### defined by the BuildableCinematicConfig above.
##########################################################################

cci:cinematicConfig1		rdf:type			cc:BuildableCinematicConfig;
####  Here is the class name of the actual config object instance we are constructing.
	apsb:javaFQCN		"org.cogchar.api.cinema.CinematicConfig";
#### Some additional descriptive metadata
	apsb:label			"Cinematic Config apsb:label";
	rdfs:label			"Cinematic Config rdfs:label";


# Now let's list the cinematics contained within this config
        cc:cinematicList	cci:cinematic_movingCameraDemo,
							cci:cinematic_movingCameraDemo2,
							cci:cinematic_positionTrackDemo,
							cci:cinematic_rotationTrackDemo;
			
# ... and the named tracks
		cc:trackList		cci:track_Demo1,
							cci:track_Demo1a,
							cci:track_PositionTrackDemo,
							cci:track_RotationTrackDemo;
		
# ... and the named waypoints
		cc:waypointList		cci:waypoint_DemoWpt1,
							cci:waypoint_DemoWpt2,
							cci:waypoint_DemoWpt3,
        					cci:waypoint_DemoWpt4;
							
# ... and the named rotations
		cc:rotationList		cci:rotation_DemoRot1;
.

################################################################################
# Cinematic Resources
################################################################################

cci:cinematic_movingCameraDemo
		cc:duration			"60";
		cc:tracks (
		[	
			cc:attachedItem		"camera_aTestCamera";
			cc:attachedItemType	"CAMERA";
			cc:trackType		"MOTIONTRACK";
			cc:directionType	"LookAt";
			cc:xDir				"0.0";
			cc:yDir				"18.0";
			cc:zDir				"0.0";
			cc:tension			"0.83";
			cc:cycle			"true";
			cc:loop				"Loop";
			cc:startTime		"0.0";
			cc:waypoints (
			[
				cc:xPos			"0";
				cc:yPos			"40";
				cc:zPos			"80"
			] [
				cc:xPos			"80";
				cc:yPos			"40";
				cc:zPos			"0"
			] [
				cc:xPos			"0";
				cc:yPos			"40";
				cc:zPos			"-80"
			] [
				cc:xPos			"-80";
				cc:yPos			"40";
				cc:zPos			"0"
			]
			)
		] 
		)	
.        

# In order to see any of the following cinematics, uncomment bci:camera_anotherTestCamera in charWorldConfig, which the contained tracks use
# To trigger them from Lift "Pushy" webapp, edit liftConfig.ttl
cci:cinematic_movingCameraDemo2
		cc:duration			"60";
		cc:tracks (
		[
			# Demo1 and Demo1a are the same, but both are defined below to demonstrate various markup options
			cc:trackName	"track_Demo1a" 
		]
		)
.

cci:cinematic_positionTrackDemo
		cc:duration			"60";
		cc:tracks (
		[
			cc:trackName	"track_PositionTrackDemo"
		]
		)
.

cci:cinematic_rotationTrackDemo
		cc:duration			"60";
		cc:tracks (
		[
			cc:trackName	"track_PositionTrackDemo"
		] [
			cc:trackName	"track_RotationTrackDemo"
		]
		)
.

################################################################################
# Track Resources
################################################################################

cci:track_Demo1
		cc:attachedItem		"camera_anotherTestCamera";
		cc:attachedItemType	"CAMERA";
		cc:trackType		"MOTIONTRACK";
		cc:directionType	"LookAt";
		cc:xDir				"0.0";
		cc:yDir				"18.0";
		cc:zDir				"0.0";
		cc:tension			"0.83";
		cc:cycle			"true";
		cc:loop				"Loop";
		cc:startTime		"0.0";
		cc:waypoints (
		[
			cc:xPos			"0";
			cc:yPos			"40";
			cc:zPos			"80"
		] [
			cc:xPos			"80";
			cc:yPos			"40";
			cc:zPos			"0"
		] [
			cc:xPos			"0";
			cc:yPos			"40";
			cc:zPos			"-80"
		] [
			cc:xPos			"-80";
			cc:yPos			"40";
			cc:zPos			"0"
		]
		)
.

cci:track_Demo1a
		cc:attachedItem		"camera_anotherTestCamera";
		cc:attachedItemType	"CAMERA";
		cc:trackType		"MOTIONTRACK";
		cc:directionType	"LookAt";
		cc:xDir				"0.0";
		cc:yDir				"18.0";
		cc:zDir				"0.0";
		cc:tension			"0.83";
		cc:cycle			"true";
		cc:loop				"Loop";
		cc:startTime		"0.0";
		cc:waypoints (
		[
			cc:waypointName	"waypoint_DemoWpt1"
		] [
			cc:waypointName	"waypoint_DemoWpt2"
		] [
			cc:waypointName	"waypoint_DemoWpt3"
		] [
			cc:waypointName	"waypoint_DemoWpt4"
		]
		)
.

cci:track_PositionTrackDemo
		cc:attachedItem		"camera_anotherTestCamera";
		cc:attachedItemType	"CAMERA";
		cc:trackType		"POSITIONTRACK";
		cc:loop				"Cycle";
		cc:startTime		"0.0";
		cc:trackDuration	"10";
		cc:waypoints (
		[
			cc:waypointName	"waypoint_DemoWpt3"
		]
		)
.

cci:track_RotationTrackDemo
		cc:attachedItem		"camera_anotherTestCamera";
		cc:attachedItemType	"CAMERA";
		cc:trackType		"ROTATIONTRACK";
		cc:loop				"Cycle";
		cc:startTime		"10.0";
		cc:trackDuration	"10";
		cc:endRotation 
		[
			cc:rotationName	"rotation_DemoRot1"
		]
.


################################################################################
# Waypoint Resources
################################################################################

cci:waypoint_DemoWpt1
	cc:xPos			"0";
	cc:yPos			"40";
	cc:zPos			"80"
.

cci:waypoint_DemoWpt2
	cc:xPos			"80";
	cc:yPos			"40";
	cc:zPos			"0"
.

cci:waypoint_DemoWpt3
	cc:xPos			"0";
	cc:yPos			"40";
	cc:zPos			"-80"
.

cci:waypoint_DemoWpt4
	cc:xPos			"-80";
	cc:yPos			"40";
	cc:zPos			"0"
.

################################################################################
# Rotation Resources
################################################################################

cci:rotation_DemoRot1
	cc:yaw			"30";
	cc:roll			"-45";
	cc:pitch		"30"
.
