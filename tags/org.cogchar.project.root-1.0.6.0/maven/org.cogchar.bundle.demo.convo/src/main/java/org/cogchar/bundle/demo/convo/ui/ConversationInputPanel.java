/*
 * Copyright 2012 by The Cogchar Project (www.cogchar.org).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * ConversationInputPanel.java
 *
 * Created on Apr 24, 2012, 6:13:51 PM
 */
package org.cogchar.bundle.demo.convo.ui;

import java.awt.event.KeyEvent;
import org.jflux.api.core.util.DefaultNotifier;
import org.jflux.api.core.Notifier;

/**
 *
 * @author Matthew Stevenson <www.robokind.org>
 */
public class ConversationInputPanel extends javax.swing.JPanel {
    private Notifier<String> myNotifier;
    /** Creates new form ConversationInputPanel */
    public ConversationInputPanel() {
        initComponents();
        myNotifier = new DefaultNotifier<String>();
    }
    
    public Notifier<String> getConvoInputNotifier(){
        return myNotifier;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSendInput = new javax.swing.JButton();
        txtConvoInput = new javax.swing.JTextField();

        btnSendInput.setText("Send");
        btnSendInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendInputActionPerformed(evt);
            }
        });

        txtConvoInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConvoInputKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(txtConvoInput, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSendInput))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSendInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtConvoInput, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendInputActionPerformed
        String input = txtConvoInput.getText();
        if(input == null || input.isEmpty()){
            return;
        }
        txtConvoInput.setText("");
        myNotifier.notifyListeners(input);
    }//GEN-LAST:event_btnSendInputActionPerformed

    private void txtConvoInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConvoInputKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnSendInputActionPerformed(null);
        }
    }//GEN-LAST:event_txtConvoInputKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendInput;
    private javax.swing.JTextField txtConvoInput;
    // End of variables declaration//GEN-END:variables
}
