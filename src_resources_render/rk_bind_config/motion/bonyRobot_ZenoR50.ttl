## This file contains RDF in Turtle (".ttl") format.
## See:   http://www.w3.org/TeamSubmission/turtle/


@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix dc:     <http://purl.org/dc/elements/1.1/> .

@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .

@prefix ja: 	<http://jena.hpl.hp.com/2005/11/Assembler#> .

@prefix apsb:	<http://www.appdapter.org/schema/box#> .
@prefix apt:	<http://www.appdapter.org/test#> .

@prefix bc:		<http://www.cogchar.org/bony/config#> .
@prefix bci:	<http://www.cogchar.org/bony/config/instance#> .


<>  rdfs:comment     "All of this metadata is optional, unused, and just for fun/future" ;
    dc:creator       "Stu B. <www.texpedient.com>" ;
    dc:subject       "Zeno R-50 config" ;
    dc:publisher     "cogchar.org" ;
    dc:title         "(title) Bony config for Zeno R-50" ;
    dc:description   "(desc) Bony config for Zeno R-50" ;
    dc:date          "2012-03-13" ;

    dc:format        "RDF" ;
    dc:identifier    "what_does_this_dublin_core_identifier_mean"
#####   ja:imports  is how we can include files, which can include others
#####  The imports will be resolved using Jena FileManager, which reads
#####  both filesystem and classpath.
#####	ja:imports		"org/cogchar/test/assembly/moreNugs.ttl"
##### The period on next line is important:  It ends this block of triples.
    .
    

#### This "Buildable" resource defines a factory for a particular kind of component.
#### The factory might keep a cache allowing it to stitch identical URI references to a
#### context-unique runtime object, or it might not.  As it turns out, BoneRobotConfig$Builder
#### does inherit that feature, but we aren't using it at this time.
#### Formally, we are defining an RDFS:class, which has the URI
#### bc:BuildableBoneRobotConfig, which you'll see used below as the "rdf:type"
#### of the bci:zenoR50 robot instance. 

bc:BuildableBoneRobotConfig
		a 					rdfs:Class;
		rdfs:subClassOf 	ja:Object;
		ja:assembler		"org.cogchar.bind.rk.robot.config.BoneRobotConfig$Builder" 
#####  Again, note the period ending the description of this resource, and all other
#####  top-level (*syntactically, but not semantically*) resources below.
		.


##########################################################################
#####   The Robot Resource
#####  The URI of the robot is (the expanded form of) bci:zenoR50	
##### rdf:type allows Jena Assembler to construct the factory   (BoneRobotConfig.Builder)
##### defined by the BuildableBoneRobotconfig above.
##########################################################################

bci:zenoR50		rdf:type			bc:BuildableBoneRobotConfig;
####  Here is the class name of the actual config object instance we are constructing.
	apsb:javaFQCN		"org.cogchar.bind.rk.robot.config.BoneRobotConfig";
#### Some additional descriptive metadata
	apsb:label			"Zeno R-50 Avatar Bone Config apsb:label";
	rdfs:label			"Zeno R-50 Avatar Bone Config rdfs:label";
#### bc:robotName is used for the Robokind "Robot.Id"
	bc:robotName		"Avatar_ZenoR50";

### bc:joint property contains the URIs of each joint.  The order does not matter.
### Commas indicate multiple values for the same property, which can be
### interpreted as an *unordered* collection.  An ordered collection uses parens, and
### has a distinctly different form (although it does also make use of commas).  
###  See the o.c.test.assembly "Nugget" example.

	bc:joint		

			bci:joint_Root_Spin, bci:joint_Spine_Twist, 

			bci:joint_Neck_Tilt, bci:joint_Neck_Nod, bci:joint_Neck_Turn, 

			bci:joint_Jaw, bci:joint_Smile,

			bci:joint_Eyes_Horiz, bci:joint_Eyes_Vert,

		bci:joint_LtShoulder_Out, bci:joint_LtShoulder_Swing, bci:joint_LtElbow_Flex, 	bci:joint_LtWrist,

		bci:joint_RtShoulder_Out, bci:joint_RtShoulder_Swing, bci:joint_RtElbow_Flex, 	bci:joint_RtWrist,

		bci:joint_LtHip_Step, bci:joint_LtHip_Out, bci:joint_LtKnee, 
					bci:joint_LtAnkle_Step, bci:joint_LtAnkle_Out,

		bci:joint_RtHip_Step, bci:joint_RtHip_Out, bci:joint_RtKnee, 
					bci:joint_RtAnkle_Step, bci:joint_RtAnkle_Out
	.

#### Other bones that seem not too useful:
###  Head, LtClav, RtClav

#################################################################################
#### Note the period above, so the robot resource is now done, and we can move on to:
####    The Joint Resources
#### Note that minAngle may be numerically greater than maxAngle, indicating an inverted relationship
#### between the joint's sense and the coordinate system of the bone.
#### "min" = fully retracted,  "max" = fully extended.
#################################################################################
### bci:joint_Root is a URI, which has properties, defined by triples.
### Each joint may have one or more projection ranges, each of which is 
### also a resource, which may be an explicit URI or a blank node.  
### (So far we are using blank nodes).
######################################################################


######################################################################
##### Torso
######################################################################

bci:joint_Root_Spin
	# We put jointNum and boneName on same line to make it easy to grep this file for mappings.
	bc:jointNum			0;			bc:jointName			"Root_Spin";
	bc:defaultPosNorm	0.5;
	
	bc:projectionRange	[
		# This resource is a "blank node", because it doesn't have an explicit URI.
		bc:boneName			"Root";
		bc:rotationAxis		"ROLL";
		bc:minAngleDeg		-180.0;
		bc:maxAngleDeg		 180.0;
	]
.

bci:joint_Spine_Twist
	bc:jointNum			1;			bc:jointName			"Spine_Twist";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"Spine1";
		bc:rotationAxis		"ROLL";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

######################################################################
##### Neck
######################################################################

bci:joint_Neck_Tilt
	bc:jointNum			10;			bc:jointName			"Neck_Tilt";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"Neackbase";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-45.0;
		bc:maxAngleDeg		 45.0;
	]
.

bci:joint_Neck_Nod
	bc:jointNum			11;			bc:jointName			"Neck_Nod";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"Neackbase";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_Neck_Turn
	bc:jointNum			12;			bc:jointName			"Neck_Turn";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"Neackbase";
		bc:rotationAxis		"ROLL";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.


######################################################################
##### Face
######################################################################

bci:joint_Jaw
	bc:jointNum			20;			bc:jointName			"Jaw";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"Jaw";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_Smile
	bc:jointNum			21;			bc:jointName			"Smile";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"Mouth";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_Eyes_Horiz
	bc:jointNum			22;			bc:jointName			"Eyes_Horiz";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtEye";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	],
	[
		bc:boneName			"RtEye";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]

.

bci:joint_Eyes_Vert
	bc:jointNum			23;			bc:jointName			"Eyes_Vert";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtEye";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	],
	[
		bc:boneName			"RtEye";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]

.

# 25   = lower eyelids
# 26  = upper eyelids
# 27  = eyebrows

######################################################################
##### Left Arm
######################################################################


bci:joint_LtShoulder_Out
	bc:jointNum			30;			bc:jointName			"LtShoulder_Out";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtShoulder";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_LtShoulder_Swing
	bc:jointNum			31;			bc:jointName			"LtShoulder_Swing";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtShoulder";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_LtElbow_Flex
	bc:jointNum			32;			bc:jointName			"LtElbow_Flex";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtElbow";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.


bci:joint_LtWrist
	bc:jointNum			33;			bc:jointName			"LtWrist";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtWrist";
		bc:rotationAxis		"ROLL";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

######################################################################
##### Right Arm
######################################################################


bci:joint_RtShoulder_Out
	bc:jointNum			40;			bc:jointName			"RtShoulder_Out";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtShoulder";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_RtShoulder_Swing
	bc:jointNum			41;			bc:jointName			"RtShoulder_Swing";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtShoulder";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_RtElbow_Flex
	bc:jointNum			42;			bc:jointName			"RtElbow_Flex";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtElbow";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_RtWrist
	bc:jointNum			43;			bc:jointName			"RtWrist";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtWrist";
		bc:rotationAxis		"ROLL";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.


######################################################################
##### Left Leg
######################################################################

bci:joint_LtHip_Step
	bc:jointNum			50;			bc:jointName			"LtHip_Step";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtHip";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.
bci:joint_LtHip_Out
	bc:jointNum			51;			bc:jointName			"LtHip_Out";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtHip";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.


bci:joint_LtKnee
	bc:jointNum			52;			bc:jointName			"LtKnee";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtKnee";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_LtAnkle_Step
	bc:jointNum			53;			bc:jointName			"LtAnkle_Step";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtAnkle";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.
bci:joint_LtAnkle_Out
	bc:jointNum			54;			bc:jointName			"LtAnkle_Out";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"LtAnkle";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-45.0;
		bc:maxAngleDeg		 45.0;
	]
.
######################################################################
##### Right Leg
######################################################################

bci:joint_RtHip_Step
	bc:jointNum			60;			bc:jointName		"RtHip_Step";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtHip";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.
bci:joint_RtHip_Out
	bc:jointNum			61;			bc:jointName		"RtHip_Out";
	bc:defaultPosNorm	0.8;
	bc:projectionRange	[
		bc:boneName			"RtHip";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-40.0;
		bc:maxAngleDeg		 10.0;
	]
.

bci:joint_RtKnee
	bc:jointNum			62;			bc:jointName			"RtKnee";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtKnee";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.

bci:joint_RtAnkle_Step
	bc:jointNum			63;			bc:jointName			"RtAnkle_Step";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtAnkle";
		bc:rotationAxis		"PITCH";
		bc:minAngleDeg		-90.0;
		bc:maxAngleDeg		 90.0;
	]
.


bci:joint_RtAnkle_Out
	bc:jointNum			64;			bc:jointName			"RtAnkle_Out";
	bc:defaultPosNorm	0.5;
	bc:projectionRange	[
		bc:boneName			"RtAnkle";
		bc:rotationAxis		"YAW";
		bc:minAngleDeg		-45.0;
		bc:maxAngleDeg		 45.0;
	]
.
