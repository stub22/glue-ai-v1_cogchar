<?xml version="1.0" encoding="UTF-8"?>

<!-- Please see Cogchar open source license at bottom of this file -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.cogchar</groupId>
		<artifactId>org.cogchar.modules.main</artifactId>
		<version>1.0.7.0-SNAPSHOT</version>
		<relativePath>../org.cogchar.modules.main/pom.xml</relativePath>
	</parent>		
	
	<artifactId>org.cogchar.lib.core.api</artifactId>
	<name>${project.artifactId} - POJO + Scala</name>
	<description>Cogchar core - does not include Render binding or Robot binding</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.cogchar.lib.onto</artifactId>
			<version>${project.version}</version>
		</dependency>		
		<!-- dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>org.cogchar.lib.actor</artifactId>
			<version>${project.version}</version>
		</dependency -->	                
    	<dependency>
			<groupId>org.appdapter</groupId>
			<artifactId>org.appdapter.bundle.core</artifactId>
			<version>${appdapter.version}</version>
		</dependency>

		<dependency>
			<!-- This dependency is MARKED FOR DEATH
				...we are migrating the Cogchar-GUI classes into their own bundle
			-->
			<groupId>org.appdapter</groupId>
			<artifactId>org.appdapter.bundle.gui</artifactId>
			<version>${appdapter.version}</version>
		</dependency>


		<dependency>
			<!-- Apache commons-math used in both o.c.l.animoid and o.c.l.sonograph, which we obtain indirectly via: -->	
			<groupId>org.appdapter</groupId>
			<artifactId>ext.bundle.math.symja_jas</artifactId>
			<version>${appdapter.version}</version>
		</dependency>		

		<dependency>
			<groupId>com.typesafe.slick</groupId>
			<artifactId>slick_2.10</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<artifactId>scala-library</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.xpp3</artifactId>
			<version>1.1.4c_5</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4</version>
			<exclusions>
				<exclusion>
					<artifactId>kxml2-min</artifactId>
					<groupId>net.sf.kxml</groupId>
				</exclusion>
			</exclusions>
		</dependency>	
    <!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>		
		<dependency>
			<groupId>org.scala-tools.testing</groupId>
			<artifactId>specs_2.10</artifactId>
			<version>1.6.9</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>scala-library</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
			</exclusions>
		</dependency>



		

	</dependencies>

	<build>
<!--	  
	These two sourceDir params are unnecessary, since our project conforms to maven-scala-plugin conventions.
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
-->
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						
							<!-- We're not actually using any scala tests right now
							<goal>testCompile</goal>
Stu:  When I try to activate "testCompile" I get:
error: bad symbolic reference. A signature in ShouldMatchers.class refers to type Collection
in package scala.package which is not available.
It may be completely missing from the current classpath, or the version on
the classpath might be incompatible with the version used when compiling ShouldMatchers.class.							
							
							-->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<skipTests>true</skipTests>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>
			
		
   			
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.scala-tools
										</groupId>
										<artifactId>
											maven-scala-plugin
										</artifactId>
										<versionRange>
											[2.15.2,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>

<!--
/*
 *  Copyright 2011 by The Cogchar Project (www.cogchar.org).
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 -->
